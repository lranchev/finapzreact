{"version":3,"sources":["Components/Chart.js","Components/Radiobutton.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Chart","props","state","chartData","labels","chart_label","datasets","label","data","chart_data","backgroundColor","className","this","width","height","options","title","display","displayTitle","text","chart_title","fontSize","legend","displayLegend","position","legendPosition","Component","defaultProps","location","useStyles","makeStyles","root","icon","borderRadius","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","StyledRadio","classes","Radio","disableRipple","color","clsx","CustomizedRadios","FormControl","component","FormLabel","RadioGroup","defaultValue","aria-label","name","FormControlLabel","value","control","App","window","chart1","chart2","chart3","chart4","src","logo","alt","href","target","rel","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"qPAGMA,E,YACJ,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACZC,UAAU,CACJC,OAAQ,EAAKH,MAAMI,YACnBC,SAAS,CACR,CACAC,MAAM,gBACNC,KAAK,EAAKP,MAAMQ,WAChBC,gBAAgB,CAChB,+BAVQ,E,sEA0BX,OACG,yBAAKC,UAAU,SAGX,kBAAC,IAAD,CACEH,KAAMI,KAAKV,MAAMC,UACjBU,MAAO,IACPC,OAAQ,IACRC,QAAS,CACPC,MAAM,CACFC,QAAQL,KAAKX,MAAMiB,aACnBC,KAAKP,KAAKX,MAAMmB,YAChBC,SAAS,IAEbC,OAAO,CACHL,QAAQL,KAAKX,MAAMsB,cACnBC,SAASZ,KAAKX,MAAMwB,wB,GA3CxBC,aAAd1B,EAoBG2B,aAAe,CACpBT,cAAa,EACbK,eAAc,EACdE,eAAe,QACfG,SAAS,cA8BE5B,Q,6DChDT6B,EAAYC,YAAW,CAC3BC,KAAM,CACJ,UAAW,CACTrB,gBAAiB,gBAGrBsB,KAAM,CACJC,aAAc,MACdpB,MAAO,GACPC,OAAQ,GACRoB,UAAW,sEACXxB,gBAAiB,UACjByB,gBAAiB,+DACjB,2BAA4B,CAC1BC,QAAS,+BACTC,cAAe,GAEjB,kBAAmB,CACjB3B,gBAAiB,WAEnB,qBAAsB,CACpBwB,UAAW,OACXI,WAAY,yBAGhBC,YAAa,CACX7B,gBAAiB,UACjByB,gBAAiB,+DACjB,WAAY,CACVlB,QAAS,QACTJ,MAAO,GACPC,OAAQ,GACRqB,gBAAiB,iDACjBK,QAAS,MAEX,kBAAmB,CACjB9B,gBAAiB,cAMvB,SAAS+B,EAAYxC,GACnB,IAAMyC,EAAUb,IAEhB,OACE,kBAACc,EAAA,EAAD,eACEhC,UAAW+B,EAAQX,KACnBa,eAAa,EACbC,MAAM,UACNN,YAAa,0BAAM5B,UAAWmC,YAAKJ,EAAQV,KAAMU,EAAQH,eACzDP,KAAM,0BAAMrB,UAAW+B,EAAQV,QAC3B/B,IAKK,SAAS8C,IACtB,OACE,kBAACC,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,iBACA,kBAACE,EAAA,EAAD,CAAYC,aAAa,OAAOC,aAAW,aAAaC,KAAK,qBAC3D,kBAACC,EAAA,EAAD,CAAkBC,MAAM,OAAOC,QAAS,kBAAChB,EAAD,MAAiBlC,MAAM,eAC/D,kBAACgD,EAAA,EAAD,CAAkBC,MAAM,OAAOC,QAAS,kBAAChB,EAAD,MAAiBlC,MAAM,iBCzBxDmD,MAxCf,WAGE,OACE,yBAAK/C,UAAU,OACb,4BAAQA,UAAU,cAGjB,kBAACoC,EAAD,MACA,kBAAC,EAAD,CAAO1C,YAAasD,OAAOC,OAAQnD,WAAYkD,OAAOE,OAAQzC,YAAY,sBAK1E,kBAAC,EAAD,CAAOf,YAAasD,OAAOG,OAAQrD,WAAYkD,OAAOI,OAAQ3C,YAAY,sBAKzE,yBAAK4C,IAAKC,IAAMtD,UAAU,WAAWuD,IAAI,SAK3C,uBACIvD,UAAU,WACVwD,KAAK,mBACLC,OAAO,SACPC,IAAI,uBAJR,qCCnBcC,QACW,cAA7BX,OAAO/B,SAAS2C,UAEe,UAA7BZ,OAAO/B,SAAS2C,UAEhBZ,OAAO/B,SAAS2C,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,2B","file":"js/main.8081d919.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar, Line, Pie} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n     chartData:{\r\n           labels: this.props.chart_label,\r\n           datasets:[\r\n            {\r\n            label:'Closing price',\r\n            data:this.props.chart_data,\r\n            backgroundColor:[\r\n            'rgba(255, 99, 132, 0.6)'\r\n             ],\r\n\r\n             }\r\n           ]\r\n      }\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend:true,\r\n    legendPosition:'right',\r\n    location:'City_stock'\r\n  }\r\n    render (){\r\n         return (\r\n            <div className=\"chart\">\r\n\r\n\r\n                <Line\r\n                  data={this.state.chartData}\r\n                  width={900}\r\n                  height={400}\r\n                  options={{\r\n                    title:{\r\n                        display:this.props.displayTitle,\r\n                        text:this.props.chart_title,\r\n                        fontSize:25\r\n                    },\r\n                    legend:{\r\n                        display:this.props.displayLegend,\r\n                        position:this.props.legendPosition\r\n                    }\r\n                  }}\r\n                />\r\n\r\n            </div>\r\n         )\r\n    }\r\n\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: '50%',\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: '#137cbd',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#106ba3',\r\n    },\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function CustomizedRadios() {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Stock picker:</FormLabel>\r\n      <RadioGroup defaultValue=\"akam\" aria-label=\"stock_pick\" name=\"customized-radios\">\r\n        <FormControlLabel value=\"akam\" control={<StyledRadio />} label=\"AKAM Stock\" />\r\n        <FormControlLabel value=\"amzn\" control={<StyledRadio />} label=\"AMZN Stock\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport he from 'he'\nimport Chart from './Components/Chart';\nimport CustomizedRadios from './Components/Radiobutton';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n       <CustomizedRadios/>\n       <Chart chart_label={window.chart1} chart_data={window.chart2} chart_title=\"Test Amazon Stock\" />\n\n      {/*<p>The last 10 dates pulled from the API are as follows: {he.decode(window.chart1)}</p>*/}\n      {/*<p>The last 10 closing prices pulled from the API are as follows: {he.decode(window.chart2)}</p>*/}\n\n       <Chart chart_label={window.chart3} chart_data={window.chart4} chart_title=\"Test Akamai Stock\"/>\n\n       {/*<p>The last 10 dates pulled from the API are as follows: {he.decode(window.chart3)}</p>*/}\n       {/*<p>The last 10 closing prices pulled from the API are as follows: {he.decode(window.chart4)}</p>*/}\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n\n\n\n      <a\n          className=\"App-link\"\n          href=\"https://cnbc.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Check the latest business news\n        </a>\n\n      </header>\n    </div>\n  );\n\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";"],"sourceRoot":""}